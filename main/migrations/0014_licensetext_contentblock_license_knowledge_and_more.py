# Generated by Django 4.0.5 on 2022-07-25 06:27

from django.db import migrations, models
import django.db.models.deletion
import multiselectfield.db.fields


class Migration(migrations.Migration):

    dependencies = [
        ('main', '0013_alter_base_state'),
    ]

    operations = [
        migrations.CreateModel(
            name='LicenseText',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created', models.DateTimeField(auto_now_add=True)),
                ('modified', models.DateTimeField(auto_now=True)),
                ('name', models.CharField(max_length=60, verbose_name='nom')),
                ('link', models.URLField(blank=True, null=True, verbose_name='lien')),
                ('file', models.FileField(blank=True, null=True, upload_to='', verbose_name='fichier')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.AddField(
            model_name='contentblock',
            name='license_knowledge',
            field=models.CharField(choices=[('specific', 'Spécifique au contenu'), ('resource', 'Identique à la ressource'), ('unknown', 'Inconnue')], default='unknown', max_length=10),
        ),
        migrations.AddField(
            model_name='contentblock',
            name='tags',
            field=models.ManyToManyField(blank=True, limit_choices_to=models.Q(('category__relates_to__contains', 'Content'), ('category__relates_to__isnull', True), ('category__relates_to', ''), _connector='OR'), related_name='contents', to='main.tag'),
        ),
        migrations.AddField(
            model_name='contentblock',
            name='use_resource_license_and_access',
            field=models.BooleanField(default=False, verbose_name='a les mêmes accès et licence que la ressource parente'),
        ),
        migrations.AddField(
            model_name='resource',
            name='has_global_license',
            field=models.BooleanField(default=False, verbose_name='Les contenus ont globalement la même licence'),
        ),
        migrations.AddField(
            model_name='tag',
            name='slug',
            field=models.CharField(blank=True, help_text='Convention : famille1,famille2DuTagDansCategorie + _ + ordreÀDeuxChiffresDansLaFamille + slugDuTag, ex contenu,logiciel_03licenceParticuliere', max_length=40, null=True, verbose_name='Slug - à ne pas modifier'),
        ),
        migrations.AddField(
            model_name='tagcategory',
            name='group_tags_by_family',
            field=models.BooleanField(default=False, help_text='nécessite de bien renseigner les slugs des tags', verbose_name='trie les tags par famille'),
        ),
        migrations.AddField(
            model_name='tagcategory',
            name='radio_display',
            field=models.BooleanField(default=False, verbose_name="s'affiche avec des boutons radios"),
        ),
        migrations.AlterField(
            model_name='base',
            name='tags',
            field=models.ManyToManyField(blank=True, limit_choices_to=models.Q(('category__relates_to__contains', 'Base'), ('category__relates_to__isnull', True), ('category__relates_to', ''), _connector='OR'), related_name='bases', to='main.tag'),
        ),
        migrations.AlterField(
            model_name='resource',
            name='tags',
            field=models.ManyToManyField(blank=True, limit_choices_to=models.Q(('category__relates_to__contains', 'Resource'), ('category__relates_to__isnull', True), ('category__relates_to', ''), _connector='OR'), related_name='resources', to='main.tag'),
        ),
        migrations.AlterField(
            model_name='tagcategory',
            name='relates_to',
            field=multiselectfield.db.fields.MultiSelectField(blank=True, choices=[('Resource', 'Ressources'), ('User', 'Utilisateurs'), ('Base', 'Bases'), ('Content', 'Contenus')], max_length=26, null=True, verbose_name='lié aux'),
        ),
        migrations.AlterField(
            model_name='user',
            name='tags',
            field=models.ManyToManyField(blank=True, limit_choices_to=models.Q(('category__relates_to__contains', 'User'), ('category__relates_to__isnull', True), ('category__relates_to', ''), _connector='OR'), related_name='users', to='main.tag'),
        ),
        migrations.AddField(
            model_name='contentblock',
            name='license_text',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='main.licensetext', verbose_name='Détail de licence propriétaire'),
        ),
        migrations.AddField(
            model_name='resource',
            name='license_text',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='main.licensetext', verbose_name='Détail de licence propriétaire'),
        ),
    ]
