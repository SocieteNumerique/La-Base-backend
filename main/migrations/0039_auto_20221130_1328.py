# Generated by Django 4.0.7 on 2022-11-30 12:28

from django.db import migrations

def move_participant_type_to_producer_occupation(apps, _):
    TagCategory = apps.get_model("main", "TagCategory")
    Tag = apps.get_model("main", "Tag")
    try:
        participant_type = TagCategory.objects.get(slug="general_00participantType")
        producer_occupation = TagCategory.objects.get(slug="externalProducer_00occupation")
    except TagCategory.DoesNotExist:
        # if the categories don't exist, there are no tags to transfer, nothing to do
        return
    m2m_fields = [field for field in Tag._meta.fields if field.many_to_many]
    for tag in participant_type.tags.all():
        try:
            other_tag = producer_occupation.tags.get(name=tag.name)
        except Tag.DoesNotExist:
            # transfer tag from one category to the other
            print(f"transfer {tag.name} from {participant_type.name} to {producer_occupation.name}")
            tag.category = producer_occupation
            tag.save()
        else:
            # in case there is already a tag with the same name in the other category,
            # transfer all usages of tag to the other tag with the same name
            print("found corresponding tag", other_tag.name)
            for field in m2m_fields:
                for obj in getattr(tag, field.name).all():
                    print(f"replace {tag.name} by {other_tag.name} in {obj} {field.field.name}")
                    getattr(obj, field.field.name).remove(tag)
                    getattr(obj, field.field.name).add(other_tag)
            tag.delete()



def reverse(*_):
    TagCategory.objects.create(
        name="Type d'acteur",
        slug="general_00participantType",
        description="Choisir le type d'acteur. Les agents peuvent être de droit public ou privé.",
    )



class Migration(migrations.Migration):

    dependencies = [
        ('main', '0038_alter_base_description'),
    ]

    operations = [
        migrations.RunPython(move_participant_type_to_producer_occupation, reverse)
    ]
